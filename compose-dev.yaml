version: "3.8"
services:
  git:
    build:
      context: .
      target: built-git
    image: kindtek/safedb-repo
    entrypoint: tail -f /dev/null
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  sdb:
    env_file:
      - sdb.env
      - sol.env
      - yub.env
    
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    image: kindtek/safedb
    # working_dir: /sdb
    build:
      context: .
      target: built-sdb
      args:
        - SAFEDB_VERSION=$SAFETYDB_VERSION
    init: true
    entrypoint: tail -f /dev/null
    stop_signal: SIGKILL
    volumes:
      - sol-vol-sdb:/sdb/solana
      - yub-vol-sdb:/sdb/yubico-net-sdk
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb

  sol:
    env_file:
      - sdb.env
      - sol.env
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
# TODO - MAKE IMAGE NAME DEPEND ON $SOLANA_BUILD_ENV
    image: kindtek/solana-safedb-debian
    build:
      context: .
      target: built-sol
      args:
      - SOLANA_CHANNEL=latest  
      - SOLANA_CI=true
      - SOLANA_BUILD=$SOLANA_BUILD
      - SOLANA_BUILD_ENV=$SOLANA_BUILD_ENV
      - SOLANA_BUILD_ENV_VERSION=$SOLANA_BUILD_ENV_VERSION
      - SOLANA_BUILD_ENV_NAME=$SOLANA_BUILD_ENV_NAME
      - SDB_SOL_DOCKER_IMG="kindtek/solana-safedb-$SOLANA_BUILD_ENV"
      - SDB_SOL_DOCKER_TAG="$SOLANA_BUILD-$SAFEDB_VERSION-$SOLANA_BUILD_ENV_NAME"
      - SDB_SOL_DOCKER="$SDB_SOL_DOCKER_IMG:$SDB_SOL_DOCKER_TAG"
      - SDB_SOL_PATH=$SDB_SOL_PATH      
    init: true
    entrypoint: tail -f /dev/null
    # - "/bin/bash solana-run.sh"
    stop_signal: SIGKILL
    tty: true
    stdin_open: true
    volumes:
      - sol-vol-sdb:/sdb/solana
    ports:
      - "8899:8899"
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  yub:
    env_file:
      - sdb.env
      - yub.env
    image: kindtek/yubico-safedb-ubuntu
    # working_dir: /sdb/yubico-net-sdk/Yubico.NativeShims
    build:
      context: .
      # dockerfile: sdb/yubico-net-sdk/Yubico.NativeShims/docker/Ubuntu/Dockerfile
      target: built-yub
      # TODO - MAKE IMAGE NAME DEPEND ON $YUBICO_BUILD_ENV
      args:
        - YUBICO_USER_ID=1000 
        - YUBICO_GROUP_ID=1000
        - YUBICO_BUILD=$YUBICO_BUILD
        - YUBICO_BUILD_ENV=$YUBICO_BUILD_ENV
        - YUBICO_BUILD_ENV_VERSION=$YUBICO_BUILD_ENV_VERSION
        - YUBICO_BUILD_ENV_NAME=$YUBICO_BUILD_ENV_NAME
        - SDB_YUB_DOCKER_IMG=kindtek/yubico-safedb-$YUBICO_BUILD_ENV
        - SDB_YUB_DOCKER_TAG=$YUBICO_BUILD-$SAFEDB_VERSION-$YUBICO_BUILD_ENV_NAME
        - SDB_YUB_DOCKER="$SDB_YUB_DOCKER_IMG:$SDB_YUB_DOCKER_TAG"
        - YUBICO_ARTIFACT_DIR=$YUBICO_BUILD_ENV-x64
      
      # - SDB_YUB_DOCKER_TAG_ARM64=$SDB_YUB_DOCKER_TAG_ARM64
      # - SDB_YUB_DOCKER_TAG_X64=$SDB_YUB_DOCKER_TAG_X64
      # - SDB_YUB_DOCKER_TAG_X86=$SDB_YUB_DOCKER_TAG_X86
    init: true
    entrypoint: tail -f /dev/null
    stop_signal: SIGKILL
    volumes:
      - yub-vol-sdb:/sdb/yubico-net-sdk
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
networks:
  default:
    name: net
    attachable: true
volumes:
  sol-vol-sdb:
    name: yub-vol-sdb
    external: false
  yub-vol-sdb:
    name: yub-vol-sdb
    external: false
