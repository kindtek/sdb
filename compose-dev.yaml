version: "3.8"
services:
  git:
    build:
      context: .
      target: built-git
    image: kindtek/safedb-repo
    entrypoint: tail -f /dev/null
      - sdb.ini
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  sdb:
    # env_file:
    #   - "sdb.env"
    #   - "solana/sdb.env"
    #   - "yubico-net-sdk/sdb.env"
    
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    image: kindtek/safedb
    # working_dir: /sdb
    build:
      context: .
      target: built-sdb
      args:
        - SAFEDB_VERSION=$SAFEDB_VERSION
    init: true
    entrypoint: tail -f /dev/null
    #   - "/bin/bash sdb.ini"
    stop_signal: SIGKILL
    volumes:
      - sol-vol-sdb:/sdb/solana
      - yub-vol-sdb:/sdb/yubico-net-sdk
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb

  sol:
    env_file:
      - "../sdb.env"
      - "sdb.env"
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
# TODO - MAKE IMAGE NAME DEPEND ON $SOLANA_BUILD_ENV
    image: kindtek/solana-safedb-debian
    build:
      context: .
      target: built-sol
      args:
      - SOLANA_CHANNEL=latest  
      - SOLANA_CI=true
      - SOLANA_BUILD=${SOLANA_BUILD:-debug.compose}
      - SOLANA_BUILD_ENV=${SOLANA_BUILD_ENV:-debug.compose}
      - SOLANA_BUILD_ENV_VERSION=${SOLANA_BUILD_ENV_VERSION:-debug.compose}
      - SOLANA_BUILD_ENV_NAME=${SOLANA_BUILD_ENV_NAME:-debug.compose}
      - SDB_SOL_DOCKER_IMG=${SDB_SOL_DOCKER_IMG:-debug.compose}
      - SDB_SOL_DOCKER_TAG=${SDB_SOL_DOCKER_TAG:-debug.compose}-${SAFEDB_VERSION:-debug.compose}-${SOLANA_BUILD_ENV_NAME:-debug.compose}
      - SDB_SOL_DOCKER=${SDB_SOL_DOCKER_IMG:-debug.compose}-${SDB_SOL_DOCKER_TAG:-debug.compose}
      - SDB_SOL_PATH=$SDB_SOL_PATH      
    init: true
    entrypoint: tail -f /dev/null
    # - "/bin/bash sdb.ini"
    # - "/bin/bash solana-run.sh"
    stop_signal: SIGKILL
    tty: true
    stdin_open: true
    volumes:
      - sol-vol-sdb:/sdb/solana
    ports:
      - "8899:8899"
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  yub:
    env_file:
      - "../sdb.env"
      - "sdb.env"
    image: yubico-safedb-ubuntu:1.5.0-A.1-bionic
    # working_dir: /sdb/yubico-net-sdk/Yubico.NativeShims
    build:
      context: .
      # dockerfile: sdb/yubico-net-sdk/Yubico.NativeShims/docker/Ubuntu/Dockerfile
      target: built-yub
      # TODO - MAKE IMAGE NAME DEPEND ON $YUBICO_BUILD_ENV
      args:
        - YUBICO_USER_ID=1000 
        - YUBICO_GROUP_ID=1000
        - YUBICO_BUILD=${YUBICO_BUILD:-debug.compose}
        - YUBICO_BUILD_ENV=${YUBICO_BUILD_ENV:-debug.compose}
        - YUBICO_BUILD_ENV_VERSION=${YUBICO_BUILD_ENV_VERSION:-debug.compose}
        - YUBICO_BUILD_ENV_NAME=${YUBICO_BUILD_ENV_NAME:-debug.compose}
        - SDB_YUB_DOCKER_IMG=${SDB_YUB_DOCKER_IMG:-debug.compose}
        - SDB_YUB_DOCKER_TAG=${YUBICO_BUILD:-debug.compose}-${SAFEDB_VERSION:-debug.compose}-${YUBICO_BUILD_ENV_NAME:-debug.compose}
        - SDB_YUB_DOCKER=${SDB_YUB_DOCKER_IMG:-debug.compose}:${SDB_YUB_DOCKER_TAG:-debug.compose}
        - YUBICO_ARTIFACT_DIR=${YUBICO_BUILD_ENV:-debug.compose}-x64
        - SOLANA_SDB_PATH=$SOLANA_SDB_PATH
      
      # - SDB_YUB_DOCKER_TAG_ARM64=$SDB_YUB_DOCKER_TAG_ARM64
      # - SDB_YUB_DOCKER_TAG_X64=$SDB_YUB_DOCKER_TAG_X64
      # - SDB_YUB_DOCKER_TAG_X86=$SDB_YUB_DOCKER_TAG_X86
    init: true
    entrypoint:
      - "/bin/bash sdb.ini"
    stop_signal: SIGKILL
    volumes:
      - yub-vol-sdb:/sdb/yubico-net-sdk
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
networks:
  default:
    name: net
    attachable: true
volumes:
  sol-vol-sdb:
    name: yub-vol-sdb
    external: false
  yub-vol-sdb:
    name: yub-vol-sdb
    external: false
