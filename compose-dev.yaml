version: "3.8"
services:
  dev:
    build:
      context: .
      target: devspace
    image: kindtek/safedb-repo
    command: tail -f /dev/null      # - sdb.ini
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
      tty: true
  sdb:
    env_file: #sdb.env
      - sdb.env
      # - sol-sdb.env
      # - yub-sdb.env
    
    ulimits:
      nofile:
        soft: 100000
        hard: 1000000
    image: kindtek/safedb
    # working_dir: /sdb
    build:
      context: .
      target: devspace
      args:
        - SAFEDB_VERSION=$SAFEDB_VERSION
    init: true
    tty: true
    command: tail -f /dev/null
    # command: 
    #   - "/bin/bash"
    stop_signal: SIGKILL
    volumes:
      - sol-vol-sdb:/sdb/solana
      - yub-vol-sdb:/sdb/yubico-net-sdk
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  building-sdb:
    build:
      args:
        - _SOL='sol'
        - _SOLANA='sdb/sol'
  building-sol:
    image: kindtek/solana-safedb-debian
    build:
      args:
        - _SOL='sol'
        - _SOLANA='sol'
      context: ./${_SOL}
      dockerfile: sdk/docker-solana/Dockerfile.debian
      target: building-sol
  sol:
    # env_file:
      # - sol-sdb.env
      # - sdb.env
    ulimits:
      nofile:
        soft: 100000
        hard: 1000000
# TODO - MAKE IMAGE NAME DEPEND ON $SOLANA_BUILD_ENV
    image: kindtek/solana-safedb-{$SOLANA_BUILD_ENV:-debug_debian}
    build:
      context: ./${_SOLANA:-sdb/sol}
        #TODO: use envs for dockerfile: ${_SOL:-debug_sol}/sdk/docker-solana/Dockerfile.alpine
      dockerfile: sdk/docker-solana/Dockerfile.{$SOLANA_BUILD_ENV:-debug_debian}
      target: solana-sdb
      args:
      - SOLANA_CHANNEL=latest  
      - SOLANA_CI=true
      - SOLANA_BUILD=${SOLANA_BUILD:-debug.compose}
      - SOLANA_BUILD_ENV=${SOLANA_BUILD_ENV:-debug.compose}
      - SOLANA_BUILD_ENV_VERSION=${SOLANA_BUILD_ENV_VERSION:-debug.compose}
      - SOLANA_BUILD_ENV_NAME=${SOLANA_BUILD_ENV_NAME:-debug.compose}
      - SDB_SOL_DOCKER_IMG=${SDB_SOL_DOCKER_IMG:-debug.compose}
      - SDB_SOL_DOCKER_TAG=${SDB_SOL_DOCKER_TAG:-debug.compose}-${SAFEDB_VERSION:-debug.compose}-${SOLANA_BUILD_ENV_NAME:-debug.compose}
      - SDB_SOL_DOCKER=${SDB_SOL_DOCKER_IMG:-debug.compose}-${SDB_SOL_DOCKER_TAG:-debug.compose}
      - _SOL='sol'
      - _SOLANA='sol'    
    tty: true   
    init: true
    # entrypoint: #tail -f /dev/null
      # - /bin/bash solana-run.sh
    command: tail -f /dev/null    #   - solana validators
    stop_signal: SIGKILL
    stdin_open: true
    volumes:
      - sol-vol-sdb:/sol
    ports:
      - "8899:8899"
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb

  
  yub:
    # env_file: # sdb.env
    #   - yub-sdb.env
    #   - sdb.env
    image: yubico-safedb-debian
    # working_dir: /sdb/yubico-net-sdk/Yubico.NativeShims
    build:
      context: .
      # dockerfile: sdb/yubico-net-sdk/Yubico.NativeShims/docker/Ubuntu/Dockerfile
      target: built-yub
      # TODO - MAKE IMAGE NAME DEPEND ON $YUBICO_BUILD_ENV
      args:
        - YUBICO_USER_ID=1000 
        - YUBICO_GROUP_ID=1000
        - YUBICO_BUILD=${YUBICO_BUILD:-debug.compose}
        - YUBICO_BUILD_ENV=${YUBICO_BUILD_ENV:-debug.compose}
        - YUBICO_BUILD_ENV_VERSION=${YUBICO_BUILD_ENV_VERSION:-debug.compose}
        - YUBICO_BUILD_ENV_NAME=${YUBICO_BUILD_ENV_NAME:-debug.compose}
        - SDB_YUB_DOCKER_IMG=${SDB_YUB_DOCKER_IMG:-debug.compose}
        - SDB_YUB_DOCKER_TAG=${YUBICO_BUILD:-debug.compose}-${SAFEDB_VERSION:-debug.compose}-${YUBICO_BUILD_ENV_NAME:-debug.compose}
        - SDB_YUB_DOCKER=${SDB_YUB_DOCKER_IMG:-debug.compose}:${SDB_YUB_DOCKER_TAG:-debug.compose}
        - YUBICO_ARTIFACT_DIR=${YUBICO_BUILD_ENV:-debug.compose}-x64
        - SOLANA_SDB_PATH=$SOLANA_SDB_PATH
        - _YUB='yub'
        - _YUBICO='yub'
      
      # - SDB_YUB_DOCKER_TAG_ARM64=$SDB_YUB_DOCKER_TAG_ARM64
      # - SDB_YUB_DOCKER_TAG_X64=$SDB_YUB_DOCKER_TAG_X64
      # - SDB_YUB_DOCKER_TAG_X86=$SDB_YUB_DOCKER_TAG_X86
    tty: true
    init: true
    command: 
      - sleep 
      - infinity
    stop_signal: SIGKILL
    volumes:
      - yub-vol-sdb:/yub
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb
  building-yub:
    build:
      args:
        - _YUB='yub'
        - _YUBICO='yub'
networks:
  default:
    name: net
    attachable: true
volumes:
  sol-vol-sdb:
    name: sol-vol-sdb
    external: false
  yub-vol-sdb:
    name: yub-vol-sdb
    external: false
