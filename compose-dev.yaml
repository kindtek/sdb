version: "3.8"
services:
  # builder:
  #   build:
  #     context: .
  #     cache_from:
  #       - sdb:builder
  #     target: builder
  #   image: sdb:builder
  git:
    build:
      context: .
      target: clone-sub-repos
    image: kindtek/sdb_dev-git
    entrypoint: tail -f /dev/null
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb_dev
    # volumes:
      # - volume-sdb:/sdb
      # - /var/run/docker.sock:/var/run/docker.sock

  sdb:
    # pull_policy:
    #   "always"
    environment:
      - PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sdb/solana/sdk/ubuntu-solana/usr/bin
      #:/sdb/solana/sdk/docker-solana/usr/bin
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    image: kindtek/sdb_dev-sdb
    # working_dir: /sdb
    build:
      context: .
      # target: built
      target: built-sdb
      # cache_from:
      #   - sdb:builder
      #   - sdb:kindtek/sdb
    init: true
    entrypoint: tail -f /dev/null
    stop_signal: SIGKILL
    volumes:
      - volume-sol:/sdb/solana
      - volume-yub:/sdb/yubico-net-sdk
    # - /var/run/docker.sock:/var/run/docker.sock

    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb_dev

  sol:
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sdb/solana/sdk/ubuntu-solana/usr/bin
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    image: kindtek/sdb_dev-sol
    build:
      context: .
      # dockerfile: /sdb/solana/sdk/docker-solana/Dockerfile
      target: built-sol
    init: true
    entrypoint: tail -f /dev/null
    # entrypoint:
      # - "/bin/bash solana-run.sh"
    stop_signal: SIGKILL
    tty: true
    stdin_open: true
    volumes:
      - volume-sol:/sdb/solana
      # - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8899:8899"
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb_dev
  yub:
    # pull_policy:
    #   "always"
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    image: kindtek/sdb_dev-yub
    # working_dir: /sdb/yubico-net-sdk/Yubico.NativeShims
    build:
      context: .
      # dockerfile: sdb/yubico-net-sdk/Yubico.NativeShims/docker/Ubuntu/Dockerfile
      target: built-yub
    init: true
    entrypoint: tail -f /dev/null
    stop_signal: SIGKILL
    volumes:
      - volume-yub:/sdb/yubico-net-sdk
    # - /var/run/docker.sock:/var/run/docker.sock

    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb_dev

  # sol:
  #   environment:
  #     - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sdb/solana/sdk/ubuntu-solana/usr/bin
  #   ulimits:
  #     nofile:
  #       soft: 1000000
  #       hard: 1000000
  #   image: kindtek/sdb_dev-sol
  #   build:
  #     context: .
  #     # dockerfile: /sdb/solana/sdk/docker-solana/Dockerfile
  #     target: built-sol
  #   init: true
  #   entrypoint:
  #     - "/bin/bash solana-run.sh"
  #   stop_signal: SIGKILL
  #   tty: true
  #   stdin_open: true
  #   volumes:
  #     - volume-yub:/sdb/solana
  #     # - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - "8899:8899"
  #     # - ./sdb/solana/sdk/docker-solana/usr/bin:/usr/share/sol/bin
  #   labels:
  #     com.docker.devenvironments: "true"
  #     com.docker.devenvironments.compose: "true"
  #     com.docker.devenvironments.container: "true"
  #     com.docker.devenvironments.name: sdb_dev

  # yub:
  #   # pull_policy:
  #   #   "always"
  #   environment:
  #     - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  #   image: kindtek/sdb_dev-yub
  #   # working_dir: /sdb/yubico-net-sdk/Yubico.NativeShims
  #   build:
  #     context: .
  #     # dockerfile: sdb/yubico-net-sdk/Yubico.NativeShims/docker/Ubuntu/Dockerfile
  #     target: built-yub
  #   init: true
  #   entrypoint: tail -f /dev/null
  #   stop_signal: SIGKILL
  #   volumes:
  #     - volume-sol:/sdb/yubico-net-sdk
  #   # - /var/run/docker.sock:/var/run/docker.sock
  #   labels:
  #     com.docker.devenvironments: "true"
  #     com.docker.devenvironments.compose: "true"
  #     com.docker.devenvironments.container: "true"
  #     com.docker.devenvironments.name: sdb_dev
networks:
  default:
    name: networks
    attachable: true
  # portainer_agent:
  #   driver: overlay
  #   attachable: true

volumes:
  # volume-sdb:
  #   name: volume-sdb
  #   external: true
  volume-sol:
    name: volume-sol
    external: false
  volume-yub:
    name: volume-yub
    external: false
