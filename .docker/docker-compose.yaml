version: "3.8"
services:
  tmp:
    pull_policy:
      "always"
    image: debian:bullseye
    container_name: sdb_compose_build
    build: .
    # working_dir: /com.docker.devenvironments.code
    init: true
    stop_signal: SIGKILL
    command: >
      /bin/bash -c "apt-get update -q
      && apt-get install git -y
      && git clone --branch dev --recurse-submodules -j8 https://github.com/kindtek/sdb.git /build
      && /build/sdk/docker-solana/build.sh"
    entrypoint:
      - sleep 250s
    volumes:
      - ./build:/build    
    labels:
      com.docker.devenvironments: "true"
      com.docker.devenvironments.compose: "true"
      com.docker.devenvironments.container: "true"
      com.docker.devenvironments.name: sdb_dev
#   yub:
#     pull_policy:
#       "always"
#     depends_on:
#       - "tmp"
#     command:
#       - infinity
#     entrypoint:
#       - sleep
#     image: mono:latest
#     build: /build/Yubico.NativeShims/Docker
#     working_dir: /yub
#     init: true
#     deploy:
#       restart_policy:
#         condition: on-failure
#         delay: 5s
#         max_attempts: 100
#         window: 600s
#     labels:
#       com.docker.devenvironments: "true"
#       com.docker.devenvironments.compose: "true"
#       com.docker.devenvironments.container: "true"
#       com.docker.devenvironments.name: sdb_dev
#     networks:
#       default: null
#     stop_signal: SIGKILL
#     volumes:
#       - type: volume
#         source: volume-yub-bin
#         target: /usr/bin

#   sol:
#     pull_policy: "always"
#     depends_on:
#       - "tmp"
#     command:
#       - infinity
#     entrypoint:
#       - sleep
#     build: /build/solana/sdk/docker-solana
#     working_dir: /sol
#     ports:
#       - "8899:8899"
#     init: true
#     deploy:
#       restart_policy:
#         condition: on-failure
#         delay: 5s
#         max_attempts: 100
#         window: 600s
#     labels:
#       com.docker.devenvironments: "true"
#       com.docker.devenvironments.compose: "true"
#       com.docker.devenvironments.container: "true"
#       com.docker.devenvironments.name: sdb_dev
#     networks:
#       default: null
#     stop_signal: SIGKILL
#     volumes:
#       - type: volume
#         source: volume-sol-bin
#         target: /usr/bin

#   app:
#     pull_policy: "always"
#     depends_on:
#       - "sol"
#       - "yub"
#     #    - "agent"
#     environment:
#       - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/share/sol/bin:/usr/share/yub/bin
#     command:
#       - infinity
#     entrypoint:
#       - sleep
#     image: debian:bullseye
#     init: true
#     deploy:
#       restart_policy:
#         condition: on-failure
#         delay: 5s
#         max_attempts: 100
#         window: 600s
#     labels:
#       com.docker.devenvironments: "true"
#       com.docker.devenvironments.compose: "true"
#       com.docker.devenvironments.container: "true"
#       com.docker.devenvironments.name: sdb_dev
#     networks:
#       default: null
#     stop_signal: SIGKILL
#     volumes:
#       - type: volume
#         source: volume-yub-bin
#         target: /usr/share/yub/bin
#       - type: volume
#         source: volume-sol-bin
#         target: /usr/share/sol/bin
#   # agent:
#   #   image: portainer/agent
#   #   environment:
#   #     AGENT_CLUSTER_ADDR: tasks.agent
#   #     CAP_HOST_MANAGEMENT: 1
#   #   volumes:
#   #     - /var/run/docker.sock:/var/run/docker.sock
#   #     - /var/lib/docker/volumes:/var/lib/docker/volumes
#   #     - /:/host
#   #   ports:
#   #     - target: 9001
#   #       published: 9001
#   #       protocol: tcp
#   #       mode: host
#   #   networks:
#   #     - portainer_agent
#   #   deploy:
#   #     mode: global
#   #     placement:
#   #       constraints: [node.platform.os == linux]
# networks:
#   default:
#     name: networks-sdb_dev
#     attachable: true
#   # portainer_agent:
#   #   driver: overlay
#   #   attachable: true

# volumes:
#   volume-yub-bin:
#     name: volume-yub-bin
#   volume-sol-bin:
#     name: volume-sol-bin
